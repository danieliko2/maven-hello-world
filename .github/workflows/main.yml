name: maven_hw_ci

on:
  workflow_dispatch:
  push:
    branches: [ "workflow_ci" ]

jobs:
  maven_hw: 
    runs-on: ubuntu-20.04
    environment: hw_env
    steps:

    - name: Connect to Repo
      uses: actions/checkout@v3

    # - name: Versioning stage
    #   run: |
    #     docker images
    #     # get last version from Dockerhub
    #     VERSION=$(curl -s https://registry.hub.docker.com/v2/repositories/${{ VARS.DH_REPO }}/tags/ | jq '.results[0].name')
    #     # if it's first build, set version to 1.0.0 (after incrementing by 0.0.1)
    #     if [[ "$VERSION" == null ]]; then
    #         VERSION=1.0.-1
    #     else
    #     # use python to remove double quotes from version
    #     VERSION=$(python3 -c " 
    #     VERSION=$VERSION.replace('\"', '') 
    #     print(VERSION) ")
    #     fi
    #     # increment by 0.0.1
    #     VERSION=$(echo ${VERSION} | awk -F. -v OFS=. '{$NF += 1 ; print}')       
        
    #     # export to github env and create a tag for Docker image
    #     echo "VERSION=${VERSION}" >> $GITHUB_ENV
    #     TAG="${{ VARS.DH_REPO }}:${VERSION}"
    #     echo "TAG=${TAG}" >> $GITHUB_ENV
    - name: Set up Docker Buildx # Enable using docker on pipeline
      id: buildx
      uses: docker/setup-buildx-action@v2

    # - name: Login to DockerHub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DH_UN }}
    #     password: ${{ secrets.DH_AT }}

    # - name: Build image and push to DockerHub
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     push: true
    #     build-args: VERSION=${{ env.VERSION }}
    #     tags: ${{ env.TAG }}


    - name: Run the image
      run: |
        sudo adduser --disabled-password --gecos "" myuser
        sudo su myuser
        docker run alpine
        # docker run ${{ env.TAG }}