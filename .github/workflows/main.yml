name: maven_hw_ci

on:
  workflow_dispatch:
  push:
    branches: [ "master", "workflow_ci"]

jobs:
  maven_hw: 
    runs-on: ubuntu-20.04
    environment: hw_env
    steps:

    - name: Connect to Repo # Fetches the last commit from Github
      uses: actions/checkout@v3

    - name: Versioning stage
      id: versioning
      run: |
        # get last version from Dockerhub
        VERSION=$(curl -s https://registry.hub.docker.com/v2/repositories/${{ VARS.DH_REPO }}/tags/ | jq '.results[0].name')
        # if it's first build, set version to 1.0.0 (after incrementing by 0.0.1)
        if [[ "$VERSION" == null ]]; then
          VERSION=1.0.-1
        else
        # use python to remove double quotes from version
        VERSION=$(python3 -c " 
        VERSION=$VERSION.replace('\"', '') 
        print(VERSION) ")
        
        fi
        # increment by 0.0.1
        VERSION=$(echo ${VERSION} | awk -F. -v OFS=. '{$NF += 1 ; print}')       
        
        # export to github env and create a tag for Docker image
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        TAG="${{ VARS.DH_REPO }}:${VERSION}"
        echo "TAG=${TAG}" >> $GITHUB_ENV
        echo ::set-output name=TAG::${TAG}

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DH_UN }}
        password: ${{ secrets.DH_AT }}

    - name: Build image
      run: docker build -t ${{ env.TAG }} --build-arg VERSION=${{ env.VERSION }} .
    
    - name: Upload to dockerhub
      run: docker push ${{ env.TAG }}
      
    outputs:
      TAG: ${{ steps.versioning.outputs.TAG }}

  run_mvn_hw: 
    runs-on: ubuntu-20.04
    needs: maven_hw
    environment: hw_env
    steps:
    - name: Run the image
      run: docker run ${{ needs.maven_hw.outputs.TAG }}